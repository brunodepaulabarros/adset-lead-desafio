// <auto-generated />
using AdSet.Veiculos.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdSet.Veiculos.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250713211447_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.FotoVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("FotosVeiculo");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.Opcional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opcionais");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.Property<long>("OpcionalId")
                        .HasColumnType("bigint");

                    b.HasKey("VeiculoId", "OpcionalId");

                    b.HasIndex("OpcionalId");

                    b.ToTable("VeiculoOpcionais");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.VeiculoPacote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Pacote")
                        .HasColumnType("int");

                    b.Property<int>("Portal")
                        .HasColumnType("int");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("VeiculoPacotes");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.FotoVeiculo", b =>
                {
                    b.HasOne("AdSet.Veiculos.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.VeiculoOpcional", b =>
                {
                    b.HasOne("AdSet.Veiculos.Domain.Entities.Opcional", "Opcional")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdSet.Veiculos.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("VeiculoOpcionais")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opcional");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.VeiculoPacote", b =>
                {
                    b.HasOne("AdSet.Veiculos.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("PacotesSelecionados")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.Opcional", b =>
                {
                    b.Navigation("VeiculoOpcionais");
                });

            modelBuilder.Entity("AdSet.Veiculos.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("PacotesSelecionados");

                    b.Navigation("VeiculoOpcionais");
                });
#pragma warning restore 612, 618
        }
    }
}
